;; -*- mode: Emacs-Lisp;-*-

(setq mac-option-modifier 'meta)
(setq mac-command-modifier 'super)
(global-set-key (kbd "s-v") 'yank)
(global-set-key (kbd "s-c") 'kill-ring-save)
(global-set-key [kp-delete] 'delete-char)

;; MacPorts specific
(setq ispell-program-name "/opt/local/bin/ispell")

(use-package pbcopy
  :ensure t
  :init (progn (defun copy-from-osx ()
                 (shell-command-to-string "pbpaste"))
               (defun paste-to-osx (text &optional push)
                 (let ((process-connection-type nil))
                   (let ((proc
                          (start-process "pbcopy" "*Messages*" "pbcopy")))
                     (process-send-string proc text)
                     (process-send-eof proc))))
               (setq interprogram-cut-function 'paste-to-osx)
               (setq interprogram-paste-function 'copy-from-osx)))

;; Makes OSX Load the path from the shell
(use-package exec-path-from-shell
  :ensure t
  :init (progn
          (setq exec-path-from-shell-check-startup-files nil)
          (exec-path-from-shell-initialize)))

(setq system-uses-terminfo nil)

(set-face-attribute 'default nil
                    :family "Hack"
                    :weight 'normal)

(defun create-tags (dir-name)
  (interactive "DDirectory: ")
  (eshell-command
   (format "find %s -type f -name \"*.[ch]\" | etags -" dir-name)))
